#!/usr/bin/python
# Tracks provides tools for analyzing large trajectory files.
# Copyright (C) 2007 Toon Verstraelen <Toon.Verstraelen@UGent.be>
#
# This file is part of Tracks.
#
# Tracks is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 3
# of the License, or (at your option) any later version.
#
# Tracks is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, see <http://www.gnu.org/licenses/>
#
# --


from tracks.core import dump_track
from tracks.parse import parse_slice
import tracks.vector as vector

import numpy
from optparse import OptionParser


usage = """%prog [options] prefix1 prefix2 prefix3 output

%prog computes the bending angle, defined by prefix1-prefix2-prefix3, for all
time steps. Tracks with the given prefixes must exist, and their filenames must
look like: ${prefix1}.c, ${prefix2}.c and ${prefix3}.c, where c is x, y or z.
The output is stored in ${output}.

%prog -h prints out all available options."""

parser = OptionParser(usage)
parser.add_option(
    "-s", "--slice", default="::",
    help="Subsample the input tracks with the given slice start:stop:step "
         "where start, stop and step must be integers or can be omitted. "
         "The slice interpretation is pythonic. [default=%default]",
)
(options, args) = parser.parse_args()


if len(args) == 4:
    prefix1, prefix2, prefix3, output_path = args
else:
    parser.error("Expecting four arguments.")

sub = parse_slice(options.slice)
dump_track(output_path, vector.bend(
    vector.from_prefix(prefix1, sub),
    vector.from_prefix(prefix2, sub),
    vector.from_prefix(prefix3, sub),
))
