#!/usr/bin/python
# Tracks provides tools for analyzing large trajectory files.
# Copyright (C) 2007 Toon Verstraelen <Toon.Verstraelen@UGent.be>
#
# This file is part of Tracks.
#
# Tracks is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 3
# of the License, or (at your option) any later version.
#
# Tracks is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, see <http://www.gnu.org/licenses/>
#
# --


from tracks.core import dump_track
from tracks.parse import parse_x_duration, parse_x_length
from molmod.units import parse_unit
from molmod.constants import lightspeed

import numpy
from optparse import OptionParser


usage = """%prog [options] {spectrum|nwavenumber} {time_axis|duration} output

%prog creates a track that contains equidistant wavenumber values that are
suitable for creating spectrum plots of dynamics simulations. The output is
written to the file ${output}.

arguments:
  spectrum -- The spectrum track (the number of data points are read from this file.)
  nwavenumber -- the number of wavenumber data points in the spectrum
  time_axis -- the time track (the last value will be taken to read the duration of the simulation.)
  duration -- The total duration of the dynamics simulation in fs
  output -- The name of the track where the wavenumber axis is written to.

%prog -h prints out all available options."""

parser = OptionParser(usage)
(options, args) = parser.parse_args()


if len(args) == 3:
    nwavenumber = parse_x_length(args[0])
    duration = parse_x_duration(args[1])
    output_path = args[2]
else:
    parser.error("Expecting three arguments.")

dump_track(output_path, 1/duration/lightspeed*numpy.arange(nwavenumber))


