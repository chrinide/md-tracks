#!/usr/bin/python
# Tracks provides tools for analyzing large trajectory files.
# Copyright (C) 2007 Toon Verstraelen <Toon.Verstraelen@UGent.be>
#
# This file is part of Tracks.
#
# Tracks is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 3
# of the License, or (at your option) any later version.
#
# Tracks is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, see <http://www.gnu.org/licenses/>
#
# --


from tracks.core import load_track, dump_track
from tracks.parse import parse_slice
from tracks.log import log

import numpy
from optparse import OptionParser


usage = """%prog [options] input block_size [output_prefix]

%prog subsamples the input by taking block averages. The block averages are
written to ${output_prefix}.reduced. The standard deviation of the values within
per block are written to ${output_prefix}.reduced.err. if the argument
output_prefix is omitted, it defaults to input. This is tool is mainly usefull
for plotting very long time series in a comprehensible fashion.

%prog -h prints out all available options."""

parser = OptionParser(usage)
parser.add_option(
    "-s", "--slice", default="::",
    help="Subsample the input track with the given slice start:stop:step "
         "where start, stop and step must be integers or can be omitted. "
         "The slice interpretation is pythonic. [default=%default]",
)
parser.add_option(
    "-q", "--quiet", action="store_false", dest="verbose", default=True,
    help="Don't print any output."
)
(options, args) = parser.parse_args()


log.verbose = options.verbose
if len(args) == 3 or len(args) == 2:
    path_in = args[0]
    block_size = int(args[1])
    if len(args) == 3:
        prefix_out = args[2]
    else:
        prefix_out = path_in
    path_out = "%s.reduced" % prefix_out
    path_err = "%s.reduced.err" % prefix_out
else:
    parser.error("Expecting two or three arguments.")

sub = parse_slice(options.slice)

inp = load_track(path_in)
inp = inp[:(len(inp)/block_size)*block_size]
inp = inp.reshape((-1,block_size))
reduced = inp.mean(axis=1)
reduced_err = inp.std(axis=1)

dump_track(path_out, reduced)
log("WRITTEN %s" % path_out)
dump_track(path_err, reduced_err)
log("WRITTEN %s" % path_err)
# Tracks provides tools for analyzing large trajectory files.
# Copyright (C) 2007 Toon Verstraelen <Toon.Verstraelen@UGent.be>
#
# This file is part of Tracks.
#
# Tracks is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 3
# of the License, or (at your option) any later version.
#
# Tracks is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, see <http://www.gnu.org/licenses/>
#
# --
