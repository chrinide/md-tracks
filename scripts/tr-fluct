#!/usr/bin/python
# MD-Tracks is a statistical analysis toolkit for molecular dynamics
# and monte carlo simulations.
# Copyright (C) 2007 - 2009 Toon Verstraelen <Toon.Verstraelen@UGent.be>, Center
# for Molecular Modeling (CMM), Ghent University, Ghent, Belgium; all rights
# reserved unless otherwise stated.
#
# This file is part of MD-Tracks.
#
# MD-Tracks is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 3
# of the License, or (at your option) any later version.
#
# In addition to the regulations of the GNU General Public License,
# publications and communications based in parts on this program or on
# parts of this program are required to cite the following article:
#
# "MD-TRACKS: A productive solution for the advanced analysis of Molecular
# Dynamics and Monte Carlo simulations", Toon Verstraelen, Marc Van Houteghem,
# Veronique Van Speybroeck and Michel Waroquier, Journal of Chemical Information
# and Modeling, 48 (12), 2414-2424, 2008
# DOI:10.1021/ci800233y
#
# MD-Tracks is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, see <http://www.gnu.org/licenses/>
#
# --


from tracks.core import load_track, dump_track
from tracks.parse import parse_slice
from tracks.optparse import add_slice_option
from tracks.log import usage_tail

from molmod.units import parse_unit

import numpy
from optparse import OptionParser


usage = """%prog [options] input1 [input2] output

%prog simply computes:
output = (input1 - <input1>)*(input1 - <input1>)
or
output = (input1 - <input1>)*(input2 - <input2>)
when input2 is given, where <...> stands for the average over the whole track.
This script is usefull when deriving macroscopic properties from fluctuations
in a molecular dynamics simulation. The output can be studied with tr-blav.
""" + usage_tail

parser = OptionParser(usage)
add_slice_option(parser)
(options, args) = parser.parse_args()


if len(args) == 2:
    path_in1, path_out = args
    path_in2 = path_in1
elif len(args) == 3:
    path_in1, path_in2, path_out = args
else:
    parser.error("Expecting two or three arguments.")

sub = parse_slice(options.slice)
in1 = load_track(path_in1)
in2 = load_track(path_in2)
dump_track(path_out, (in1-in1.mean())*(in2-in2.mean()))


