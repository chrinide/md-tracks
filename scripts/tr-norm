#!/usr/bin/python
# Tracks provides tools for analyzing large trajectory files.
# Copyright (C) 2007 Toon Verstraelen <Toon.Verstraelen@UGent.be>
#
# This file is part of Tracks.
#
# Tracks is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 3
# of the License, or (at your option) any later version.
#
# Tracks is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, see <http://www.gnu.org/licenses/>
#
# --


from tracks.core import load_track, dump_track
from tracks.parse import parse_slice
from tracks.optparse import add_quiet_option, add_slice_option
from tracks.log import log

import numpy
from optparse import OptionParser


usage = """%prog [options] input1 input2 [input3 ...] output

%prog computes the time-dependent norm of a set of tracks given by ${input*}.
The result is written to ${output}.

%prog -h prints out all available options."""

parser = OptionParser(usage)
add_slice_option(parser)
add_quiet_option(parser)
(options, args) = parser.parse_args()


log.verbose = options.verbose
if len(args) >= 2:
    paths_in = args[:-1]
    path_out = args[-1]
else:
    parser.error("Expecting at least two arguments.")

sub = parse_slice(options.slice)

result = 0.0
for path_in in paths_in:
    f = load_track(path_in, sub)
    result += f*f
    log("PROCESSED %s" % path_in)

dump_track(path_out, numpy.sqrt(result))
log("WRITTEN %s" % path_out)


