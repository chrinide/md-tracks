#!/usr/bin/python
# Tracks provides tools for analyzing large trajectory files.
# Copyright (C) 2007 Toon Verstraelen <Toon.Verstraelen@UGent.be>
#
# This file is part of Tracks.
#
# Tracks is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 3
# of the License, or (at your option) any later version.
#
# Tracks is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, see <http://www.gnu.org/licenses/>
#
# --


from tracks.core import load_track, dump_track
from tracks.optparse import add_quiet_option
from tracks.log import log

import numpy
from optparse import OptionParser


usage = """%prog [options] input1 [input2 ...]

%prog performs an inverse real Fourier transform on the tracks given by
${input1}, ${input2}, ... and stores each transform in a file in
${input*}.irfft.

%prog -h prints out all available options."""

parser = OptionParser(usage)
add_quiet_option(parser)
(options, args) = parser.parse_args()


log.verbose = options.verbose
if len(args) >= 1:
    paths_in = args
else:
    parser.error("Expecting at least one argument.")

for path_in in paths_in:
    path_out = "%s.irfft" % path_in
    f = load_track(path_in)
    result = numpy.fft.irfft(f)
    dump_track(path_out, result)
    log("TRANSFORMED %s -> %s" % (path_in, path_out))



